// 7.1 산술 연산자

/* 
산술 연산자는 피연산자를 대상으로 수학적 계산을 수행하여 새로운 숫자 값을 만든다

산술 연산이 불가능한 경우 NaN을 반환한다
*/

// 7.1.1 이항 산술 연산자
/* 
모든 이항 산술 연산자는 피연산자의 값을 변경하는 부수효과(Side Effect)가 없다
즉, 어떤 산술연산을 해도 피연산자의 값이 바뀌는 경우는 없고 언제나 새로운 값을 만들 뿐이다
*/

/* 덧셈 */
5 + 2; // 7

/* 뺄셈 */
5 - 2; // 3

/* 곱셈 */
5 * 2; // 10

/* 나눗셈 */
5 / 2; // 2.5

/* 나머지 */
5 % 2; // 1

// 7.1.2 단항 산술 연산자
/* 
단항 산술 연산자는 1개의 피연산자를 산술 연산하여 숫자 값을 만든다
*/

/* 
++ 증가 부수효과 O
-- 감소 부수효과 O
+  어떠한 효과도 없다. 음수를 양수로 반전하지도 않는다 X
-  양수를 음수로, 음수를 양수로 반전한 값을 반환 X
*/

/* 
증가, 감소 단항 연산자를 사용하면 피연산자의 값을 변경하는 암묵적인 할당이 이루어진다
*/

// 예제 07-03
var x = 1;

// ++ 연산자는 피연산자의 값을 변경하는 암묵적 할당이 이루어진다
x++; // x = x + 1;
console.log(x); // 2

// -- 연산자는 피연산자의 값을 변경하는 암묵적 할당이 이루어진다
x--;
console.log(x); // 1

/* 
증감 단항 연산자는 위치에 따라 결과가 달라진다
*/

// 예제 07-04
var x = 5,
  result;

// 선할당 후증가(postfix increment operator)
result = x++;
