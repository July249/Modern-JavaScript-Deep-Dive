// push - 부수효과 있음
// push 메서드는 매개변수로 전달 받은 모든 값을 원본 배열의 마지막 요소로 추가하고 변경된 length 프로퍼티 값을 반환한다
// push 메서드는 원본 배열을 직접 변경한다

// 27-46
const arr1 = [1, 2];

// 매개변수로 전달받은 모든 값을 원본 배열 arr의 마지막 요소로 추가하고 변경된 length 값을 반환한다
let result = arr1.push(3, 4);
console.log(result); // 4

// push 메서드는 원본 배열을 직접 변경한다
console.log(arr1); // [1, 2, 3, 4]

// push 메서드의 단점 극복 방안
/* 
단점 1. push 메서드는 성능 면에서 좋지 않다
방안 1. 마지막 요소로 추가할 요소가 하나 뿐이라면 push 메서드를 사용하지 않고 length 프로퍼티를 사용하여 배열의 마지막 요소를 직접 추가할 수 있다 / 이 방법이 push 메서드 보다 빠르다
*/
// 27-47 - arr[arr.length] = value; => 그냥 배열의 요소를 추가로 생성하여 값을 할당
const arr2 = [1, 2];

// arr.push(3)과 동일한 처리를 한다
arr2[arr2.length] = 3;
arr2[arr2.length] = 4;
console.log(arr2); // [1, 2, 3, 4]
// 단, 하나의 값만 배열의 끝에 추가하는 경우에만 위 예제 27-47의 방법을 권한다

/* 
단점 2. push 메서드는 원본 배열을 직접 변경하게 되는 부수효과가 있다
방안 2. 스프레드 문법 사용
*/

// 27-48 - 스프레드 문법을 사용한 부수효과 제거
const arr3 = [1, 2];

const newArr3 = [...arr3, 3, 4];
console.log(newArr3); // [1, 2, 3, 4]
